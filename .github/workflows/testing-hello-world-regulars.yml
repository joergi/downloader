# this will test the downloader script for HelloWorld which is called by:
# The MagPi
#   The MagPi regular issues (Mac/Linux)
#   The Magpi books / special issues (Mac/Linux/Win)
# Hello World
#   Hello World regular issues  (Mac/Linux)
#   Hello World books (Mac/Linux/Win)
# HackSpace Magazine
#   Hackspace Magazine regular issues
#   Hackspace Magazine books (Mac/Linux/Win)
# Wireframe
#   Wireframe regular issues (Mac/Linux)
#   Wireframe books (Mac/Linux/Win)


name: Testing HelloWorld Regulars

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  hello-world-books-powershell:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v4.1.7
#
#      - name: make folder for books
#        run: mkdir books
#        shell: bash
#
#      - name: Download Books Hello World windows
#        id: HelloWorldBooksWin
#        shell: pwsh
#        run: ./windows/downloader.ps1 -downloadUrl "https://www.raspberrypi.org/hello-world/books/big_book_of_pedagogy/pdf" -outputDir "books"
#
#      - name: lslah books
#        run: Get-ChildItem â€“path D:\a\downloader\downloader\books
#
#      - name: "Check file existence Windows special"
#        id: check_files
#        uses: andstor/file-existence-action@v3.0.0
#        with:
#          files: "books/Hello_World_The_Big_Book_of_Pedagogy.pdf"
#          fail: true
#
#      - name: File exists
#        if: steps.check_files.outputs.files_exists == 'false'
#        run: exit 1


  hello-world-regular-bash-linux:
    strategy:
      matrix:
        os: [ macos, ubuntu ]
#        os: [ macos, ubuntu, windows ]
      fail-fast: false # Allows to see results from other combinations
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set OS-specific variables for Windows
        if: matrix.os == 'windows'
        run: |
          echo "OS_PATH=windows" >> $GITHUB_ENV
          echo "OS_FILE_EXTENSION=ps1" >> $GITHUB_ENV
        shell: bash

      - name: Set OS-specific variables for macOS and Ubuntu
        if: matrix.os != 'windows'
        run: |
          echo "OS_PATH=linux_mac" >> $GITHUB_ENV
          echo "OS_FILE_EXTENSION=sh" >> $GITHUB_ENV
        shell: bash

      - name: curl remote file output
        id: read_recent
        run: |
          echo "ISSUE_NUMBER=$(curl https://raw.githubusercontent.com/joergi/HelloWorldDownloader/main/regular-issues.txt)" >> $GITHUB_ENV
          echo "ISSUE_MINUS_ONE=$((${{ env.ISSUE_NUMBER }}-1))" >> $GITHUB_ENV
        shell: bash

      - name: print out vars
        id: printOutVars
        shell: bash
        run: env

      - name: make folder for regular
        run: mkdir regular
        shell: bash

      - name: Download regular linux with first and last
        id: regularIssuesFirstLast
        run: ./${{ env.OS_PATH }}/downloader.${{ env.OS_FILE_EXTENSION }} https://www.raspberrypi.org/hello-world/issues/%d/ regular ${{ env.ISSUE_NUMBER }} HelloWorld_ -f 4 -l 5

      - name: Download regular linux with end limit
        id: regularIssuesLast
        run: ./${{ env.OS_PATH }}/downloader.${{ env.OS_FILE_EXTENSION }} https://www.raspberrypi.org/hello-world/issues/%d/ regular ${{ env.ISSUE_NUMBER }} HelloWorld_ -l 2

      - name: Download regular linux with start
        id: regularIssuesFirst
        run: ./${{ env.OS_PATH }}/downloader.${{ env.OS_FILE_EXTENSION }} https://www.raspberrypi.org/hello-world/issues/%d/ regular ${{ env.ISSUE_NUMBER }} HelloWorld_ -f ${{ env.ISSUE_MINUS_ONE }}

      - name: lslah
        run: ls -lah regular/
        shell: bash

      - name: "Check file existence Linux special issues"
        id: check_files
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: "regular/HelloWorld_1.pdf, regular/HelloWorld_2.pdf, regular/HelloWorld_4.pdf, regular/HelloWorld_5.pdf,  regular/HelloWorld_${{ env.ISSUE_MINUS_ONE }}.pdf, regular/HelloWorld_${{ env.ISSUE_NUMBER }}.pdf"
          fail: true

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'false'
        run: exit 1
