# this will test the downloader script for HelloWorld which is called by:
# The MagPi
#   The MagPi regular issues (Mac/Linux)
#   The Magpi books / special issues (Mac/Linux/Win)
# Hello World
#   Hello World regular issues  (Mac/Linux)
#   Hello World books (Mac/Linux/Win)
# HackSpace Magazine
#   Hackspace Magazine regular issues
#   Hackspace Magazine books (Mac/Linux/Win)
# Wireframe
#   Wireframe regular issues (Mac/Linux)
#   Wireframe books (Mac/Linux/Win)


name: Testing HelloWorld Regulars

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  hello-world-regular:
    strategy:
      matrix:
        os: [ macos, ubuntu ]
      fail-fast: false # Allows to see results from other combinations
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Set OS-specific variables for Windows
        if: matrix.os == 'windows'
        run: |
          echo "OS_PATH=windows" >> $GITHUB_ENV
          echo "OS_FILE_EXTENSION=ps1" >> $GITHUB_ENV
        shell: bash

      - name: Set OS-specific variables for macOS and Ubuntu
        if: matrix.os != 'windows'
        run: |
          echo "OS_PATH=linux_mac" >> $GITHUB_ENV
          echo "OS_FILE_EXTENSION=sh" >> $GITHUB_ENV
        shell: bash

      - name: curl remote file output
        id: read_recent
        run: |
          echo "ISSUE_NUMBER=$(curl https://raw.githubusercontent.com/joergi/HelloWorldDownloader/main/regular-issues.txt)" >> $GITHUB_ENV
        shell: bash

      - run: |
          echo "ISSUE_MINUS_ONE=$((${{ env.ISSUE_NUMBER }}-1))" >> $GITHUB_ENV
        shell: bash

      - name: print out vars
        shell: bash
        run: |
          echo "issue: number" ${{ env.ISSUE_NUMBER }}
          echo "issue: minus one" ${{ env.ISSUE_MINUS_ONE }}
          echo "--------------------"
          env

      - name: make folder for regular
        run: mkdir regular

      - name: Download regular with first and last
        id: regularIssuesFirstLast
        run: ./${{ env.OS_PATH }}/downloader.${{ env.OS_FILE_EXTENSION }} https://www.raspberrypi.org/hello-world/issues/%d/ regular ${{ env.ISSUE_NUMBER }} HelloWorld_ -f 4 -l 5

      - name: Download regular with end limit
        id: regularIssuesLast
        run: ./${{ env.OS_PATH }}/downloader.${{ env.OS_FILE_EXTENSION }} https://www.raspberrypi.org/hello-world/issues/%d/ regular ${{ env.ISSUE_NUMBER }} HelloWorld_ -l 2

      - name: Download regular with start
        id: regularIssuesFirst
        run: ./${{ env.OS_PATH }}/downloader.${{ env.OS_FILE_EXTENSION }} https://www.raspberrypi.org/hello-world/issues/%d/ regular ${{ env.ISSUE_NUMBER }} HelloWorld_ -f ${{ env.ISSUE_MINUS_ONE }}

      - name: lslah
        run: ls -lah regular/

      - name: "Check file existence special issues"
        id: check_files
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: "regular/HelloWorld_1.pdf, regular/HelloWorld_2.pdf, regular/HelloWorld_4.pdf, regular/HelloWorld_5.pdf,  regular/HelloWorld_${{ env.ISSUE_MINUS_ONE }}.pdf, regular/HelloWorld_${{ env.ISSUE_NUMBER }}.pdf"
          fail: true

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'false'
        run: exit 1
